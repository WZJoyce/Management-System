[{"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/index.js":"1","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/App.js":"2","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/reportWebVitals.js":"3","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/pages/login/login.jsx":"4","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/pages/admin/admin.jsx":"5","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/api/index.js":"6","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/api/ajax.js":"7"},{"size":500,"mtime":1607217199955,"results":"8","hashOfConfig":"9"},{"size":585,"mtime":1607427702163,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607217199958,"results":"11","hashOfConfig":"9"},{"size":4597,"mtime":1607672466293,"results":"12","hashOfConfig":"9"},{"size":180,"mtime":1607304127530,"results":"13","hashOfConfig":"9"},{"size":426,"mtime":1607666392118,"results":"14","hashOfConfig":"9"},{"size":400,"mtime":1607682396044,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ginwqa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/index.js",[],["32","33"],"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/App.js",[],"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/reportWebVitals.js",[],"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/pages/login/login.jsx",["34"],"import React, {Component}from 'react'\nimport './login.less'\nimport { Form, Input, Button} from 'antd'\nimport { UserOutlined, LockOutlined, RadiusBottomrightOutlined } from '@ant-design/icons'\nimport {reqLogin} from '../../api'\n\n/*\nhttps://ant.design/components/form/v3-cn/\n*/\nexport default class Login extends Component{\n   //定义函数在这里  return里用的时候要this.onFinish函数\n   onFinish = (values) => {\n    console.log('Received values of form: ', values);\n   \n        //请求登录\n      const {username, password} = values\n      reqLogin(username, password).then(reponse=>{\n          console.log('success', reponse.data)\n      }).catch( error=>{\n          console.log('fail', error)\n      })\n\n  \n   }\n\n  /*handelSubmit=(event)=>{\n      \n      event.preventDefault()\n      this.props.form.validateFields((err,values)=>{\n          if(!err){\n              //请求登录\n            const {username, password} = values\n            reqLogin(username, password).then(reponse=>{\n                console.log('success', reponse.data)\n            }).catch( error=>{\n                console.log('fail', error)\n            })\n\n          }else{\n              console.log('fail')\n          }\n      });\n  }*/\n\n  /*\n  对密码进行自定义验证\n  */\n    validatorPwd=(rule,value)=>{\n        if(!value){\n            return Promise.reject('Please input your Password!');//验证不通过\n        }else if(value.length<4){\n            return Promise.reject('Enter a combination of at least four numbers, letters and punctuation  marks');//验证不通过\n        }/*else if(!/^[a-zA-Z0-9_-]+$/.test(value)){\n            callback('Enter a combination of at least four numbers, letters and punctuation  marks');//验证不通过\n        }*/else{\n            return Promise.resolve();//验证通过\n        }\n        \n        \n    }\n    \n    render(){\n        //定义一个元素变量 调用的时候不需要this 直接\n       /* const onFinish = (values) => {\n            console.log('Received values of form: ', values);\n          }*/\n        \n        \n        return(\n            <div className=\"login\">\n                <header  className=\"login-header\"> \n                    <h1>React Project: Admin System</h1>\n                </header>\n                <section className=\"login-content\">\n                <h2>Log in</h2>\n                <div>  <Form name=\"normal_login\" className=\"login-form\" initialValues={{remember: true,}} onFinish={this.onFinish}>\n      <Form.Item name=\"username\" rules={[\n          {\n            required: true,\n            whitespace:true,\n            message: 'Please input your Username!',\n          },\n          {\n            min: 4, message:'Enter a combination of at least four numbers, letters and underscore  marks',\n          },\n          {\n            pattern: /^[a-zA-Z0-9_]+$/, message: 'Enter a combination of at least four numbers, letters and underscore  marks',\n          },\n          \n        ]}>\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item name=\"password\" rules={[\n         {\n            validator:this.validatorPwd,\n          }\n        ]}>\n        <Input \n          prefix={<LockOutlined className=\"site-form-item-icon\" />} \n          type=\"password\"\n          placeholder=\"Password\"/>\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>  \n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>  \n      </Form.Item>\n    </Form></div>\n\n              \n                </section>\n            </div>\n        )\n    }\n\n}\n\n/*\n1.高阶函数\n1）一类特别函数\n  a 接受函数类型的参数\n  b 函数的返回值是个函数\n2）常见\n   a.定时器：setTimeout()/setInterval()\n   b.Promise: Promise(()=>{}) then (value=>{}, reason=>{})\n   c.数组遍历相关的方法：forEach()/filter()/map()/reduce()/find()/findIndex()\n   d.函数对象的bind()\n3）高阶函数更新动态，更加具有扩展性\n2.高阶组件\n  1）本质就是一个函数\n  2）接受一个组件（被包装组件），返回一个新组件（包装组件），新组件内部渲染被包装组件传入特定属性\n  3) 作用：扩展组件的功能\n  4) 高阶组件也是高阶函数：接收一个组件函数，返回是一个新的组件函数\n*/\n/*\n包装Form组件生成一个新的组件：Form(Login)\n新组件会向Form组件传递一个强大的对象属性：form\n*/\n\n/*\n1.前台表单验证\n2.收集表单输入数据\n\n*/","/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/pages/admin/admin.jsx",[],"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/api/index.js",[],"/Users/zhouwei/Downloads/黑马/workplace/react-admin_client/src/api/ajax.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":38,"nodeType":"41","messageId":"42","endLine":4,"endColumn":63},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'RadiusBottomrightOutlined' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]